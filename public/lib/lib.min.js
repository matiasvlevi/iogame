class Logger{constructor(){}}Logger.server=function(e){console.log(`[Server]: ${e}`)},Logger.game=function(e,t){let s=Object.values(t.players).length,o=`[[33m${(new Date).toLocaleTimeString().slice(0,5)}[0m][[33m${s}[0m/[33m20[0m] > `+e;return console.log(o),o},globalThis.isBrowser="object"!=typeof process,isBrowser||(module.exports=Logger),globalThis.isBrowser="object"!=typeof process,isBrowser||(globalThis.Player=require("../player/player.js"));const World=function(){this.players={},this.tick=0,this.wn={x:800,y:800},this.skins={default:[255,255,255]}};let world;World.prototype.setSize=function(e,t){this.wn={x:e,y:t}},World.prototype.playerJoin=function(e="username"){socket.emit("playerJoin",e)},World.prototype.addPlayer=function(e,t){if("string"==typeof e){let s=new Player(e,t);return s.setPos(Math.random()*this.wn.x,Math.random()*this.wn.y),this.players[t]=s,s}if("object"==typeof e){let t=new Player;return t=World.fromObject(t,e),this.players[e.sid]=t,t}},World.prototype.removePlayer=function(e){delete this.players[e]},World.fromObject=function(e,t){let s=Object.keys(e),o=Object.values(t);for(let t=0;t<s.length;t++)e[s[t]]=o[t];return e},World.prototype.render=function(e){let t=Object.values(this.players);for(let s=0;s<t.length;s++)t[s].render(e.sid)},World.prototype.toObject=function(){let e=Object.keys(this),t=Object.values(this),s={};for(let o=0;o<e.length;o++)s[e[o]]=t[o];return s},World.prototype.update=function(){for(let e in world.players)world.players[e].update()},isBrowser||(module.exports=new World),globalThis.isBrowser="object"!=typeof process,isBrowser?void 0===world&&(world=new World):world=require("../env/world.js");const Player=function(e,t,s=0,o=0){this.pos={x:s,y:o},this.vel={x:0,y:0},this.size=16,this.self=!1,this.username=e,this.sid=t,this.skin="default",this.speed=1.5};let player;function setup(){let e=window.innerWidth,t=window.innerHeight;createCanvas(e,t),world.playerJoin(prompt("Nickname:")),world.setSize(e,t)}function draw(){background(51),world.render(player),world.update()}Player.prototype.setPos=function(e,t){this.pos={x:e,y:t}},Player.prototype.render=function(e){this.sid===e&&(fill(100,100,100,100),ellipse(this.pos.x,this.pos.y,64,64)),noStroke(),fill.apply(1,world.skins[this.skin]),ellipse(this.pos.x,this.pos.y,this.size,this.size),text(this.username,this.pos.x+this.size,this.pos.y+this.size)},Player.prototype.update=function(){this.self&&(keyIsDown(UP_ARROW)?this.addForce(0,-1):keyIsDown(DOWN_ARROW)&&this.addForce(0,1),keyIsDown(LEFT_ARROW)?this.addForce(-1,0):keyIsDown(RIGHT_ARROW)&&this.addForce(1,0)),this.pos.x+=this.vel.x,this.pos.y+=this.vel.y,this.vel.x*=.9,this.vel.y*=.9},Player.prototype.addForce=function(e,t){this.vel.x+=e*this.speed,this.vel.y+=t*this.speed,socket.emit("updatePos",{sid:this.sid,pos:this.pos,vel:this.vel})},Player.prototype.toObject=function(){let e=Object.keys(this),t=Object.values(this),s={};for(let o=0;o<e.length;o++)s[e[o]]=t[o];return s},isBrowser||(module.exports=Player),isBrowser&&(socket.on("newPlayer",(e=>{world.addPlayer(e),Logger.server(`${e.username} joined the game!`)})),socket.on("removePlayer",(e=>{let t=world.players[e].username;delete world.players[e],Logger.server(`player ${t} left the game`)})),socket.on("selfPlayer",(e=>{player=World.fromObject(new Player,e),world.players[e.sid].self=!0})),socket.on("updatePosClient",(e=>{world.players[e.sid].pos=e.pos,world.players[e.sid].vel=e.vel})));